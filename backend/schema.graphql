type AttachmentGQL {
  type: String!
  name: String!
  url: String!
  size: Int
  mimeType: String
  metadata: JSON
}

input AttachmentInput {
  type: String!
  name: String!
  url: String!
  size: Int = null
  mimeType: String = null
  metadata: JSON = null
}

type ConversationGQL {
  id: Int!
  title: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  messages: [MessageGQL!]!
}

input ConversationInput {
  title: String = null
}

"""Date with time (isoformat)"""
scalar DateTime

input DocumentCreateInput {
  title: String!
  content: String!
  category: String!
}

input DocumentFilter {
  search: String = null
  category: String = null
  startDate: DateTime = null
  endDate: DateTime = null
}

type DocumentType {
  id: Int!
  title: String!
  content: String!
  category: String!
  createdAt: DateTime!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](https://ecma-international.org/wp-content/uploads/ECMA-404_2nd_edition_december_2017.pdf).
"""
scalar JSON @specifiedBy(url: "https://ecma-international.org/wp-content/uploads/ECMA-404_2nd_edition_december_2017.pdf")

type MessageGQL {
  id: Int!
  conversationId: Int!
  type: String!
  content: String!
  attachments: [AttachmentGQL!]
  createdAt: DateTime!
}

input MessageInput {
  conversationId: Int!

  """Message type, must be either 'user' or 'agent'"""
  type: String!
  content: String!
  attachments: [AttachmentInput!] = null
}

type Mutation {
  createConversation(input: ConversationInput!): ConversationGQL!
  createConversationWithMessage(title: String, firstMessage: String!, attachments: [AttachmentInput!]): ConversationGQL!
  sendMessage(input: MessageInput!): MessageGQL!
  createDocument(document: DocumentCreateInput!): DocumentType!
}

type Query {
  getConversations: [ConversationGQL!]!
  getConversation(id: Int!): ConversationGQL
  getDocument(id: Int!): DocumentType!
  listDocuments(filter: DocumentFilter = null, limit: Int! = 10, offset: Int! = 0): [DocumentType!]!
}